FORMAT: 1A
HOST: https://api.accredible.com/

# Accredible Credential API
The [Accredible](https://www.accredible.com/) Credential API allows you to create and interact with badges and certificates called [Accredible Credentials](https://www.credential.net/10000005).

There are 3 main objects in Accredible: Credentials, Groups and Designs.

[![API Overview Video](https://img.youtube.com/vi/R7euTeMGaQg/0.jpg)](https://www.youtube.com/watch?v=R7euTeMGaQg)

# Credentials
[Credentials](http://docs.accrediblecredentialapi.apiary.io/#reference/credentials) are the core object in the API. They collect all of the data related to a course, training acitivity or achievment and the recipient/participant information.

You should create a credential for each achievement completion that a recipient has. For example if John Doe finishes the Programming 101 course we should create one credential to represent that. If John Doe achieves something else then he would need a new credential.

# Groups
[Groups](http://docs.accrediblecredentialapi.apiary.io/#reference/groups) are similar to a folder or a course. They contain information about the achievement and have multiple Credentials attached to them.

For example you should create a group for the Introduction to Programming course. You'd provide the Course Name, Course Descripion and Course URL. In the future you can pass the name or ID of this group when creating a credential so that the credential is passed all the information relating to the achievement.

# Designs
[Designs](http://docs.accrediblecredentialapi.apiary.io/#reference/designs) provide a visual specification for how a Credential should be rendered. Design can be used accross multiple Groups.

For example if we have three courses: Intro to Basic Programming, Intro to Advanced Programming and Intro to DevOps each of these may have the same design for their Credentials. When creating or updating their corresponding Groups you would attach the desired design accordingly.

# Departments
[Departments](http://docs.accrediblecredentialapi.apiary.io/#reference/departments), if enabled for your account allow you to manage multiple, independent organization groups. Each Department is entirely separate with it's own Designs, Groups, Branding, etc. You cannot share data between Departments excepting Billing and Administrators.

# Attributes
[Attributes](http://docs.accrediblecredentialapi.apiary.io/#reference/attributes), are used to merge information with your certificate designs and email templates. Attributes acts as as placeholders for information and can be added to certificate designs and email templates.

# Issuers
[Issuers](http://docs.accrediblecredentialapi.apiary.io/#reference/issuer) provide organization details.

# API Key
API keys are used as Authorization tokens in the header in all authenticated API endpoints. These Keys are managed in the [Accredible Dashboard](https://dashboard.accredible.com/). There are two types of API Keys, those that are account wide and work on all assets and those that are related to a specific department. API keys scoped to a specific department can only access the resources (Credentials, Groups, Designs etc.) belonging to that department.

# Single sign-on options on Accredible
[Single sign-on](http://docs.accrediblecredentialapi.apiary.io/#reference/sso) in addition to the student authentication provided by Accredible, you can also use single sign-on to authenticate your student into Accredible and they can directly sign-in.

SSO is also available via our Integrations and via SAML 2.0.

# Rate Limiting
We allow up to 200 requests every 30 seconds from a single IP address. If you attempt to make requests more quickly then this you may receive a `429 Too Many Requests` response from an endpoint.

# Errors
Accredible uses conventional HTTP response codes to indicate the success or failure of an API request. Codes in the 2xx range indicate success in general and codes in the 4xx range indicate an error that failed given the information provided (e.g., a required parameter was omitted, a permissions error, etc). Codes in the 5xx range indicate an error with Accredible.

Summary of response codes:

| Response Code | Description |
| ------------- | ------------- |
| 200 | The request was successful. |
| 401 | Invalid API key. |
| 403 | Permissions error. You do not have access to the requested resource. |
| 404 | The request used a resource that could not be found. |
| 429 | Too many requests. Please see the Rate Limiting section. |
| 500 | Accredible Internal Error. |



#Group Quick Start
In this quick start tutorial, we assume you have already created your first group. If you haven't then go to [create a group in the dashboard](https://dashboard.accredible.com/issuer/dashboard/group/new?edit=information-and-appearance) or use [this API request](https://accrediblecredentialapi.docs.apiary.io/reference/groups/groups/create-a-group).

To get you up and running the example below shows you how to create a basic Credential.

### Credentials [/v1/credentials]

#### Create a Credential [POST]

Create a Credential using this action. It requires a JSON object containing a Credential.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY

    + Attributes
        + recipient.name (string, required) - The name of the recipient the credential is issued to.
        + recipient.email (string, required) - The recipient's email address.
        + group_id (number, required) -  Group Id to which the credential should belong. Legacy field. Group name may be used in place of a Group ID.

    + Body

            {
                "credential": {
                    "recipient": {
                        "name": "John Doe",
                        "email": "person@example.com"
                    },
                    "group_id": 34
                }
            }

+ Response 200 (application/json)

        {
            "credential": {
                "id": 1234,
                "recipient": {
                    "name": "John Doe",
                    "email": "john@doe.com",
                    "id"   : 817,
                    "meta_data": null
                },
                "issuer": {
                    "name": "Course Provider",
                    "url": "http://www.awesomelearningexample.com",
                    "description": "Technical courses at an introductory level..."
                },
                "name": "Credential Name",
                "description": "A detailed description of what the credential is for",
                "issued_on": "2014-06-14",
                "group_name": "Test Group",
                "group_id": 34,
                "grade": null,
                "complete": true,
                "expired_on": null,
                "custom_attibutes": null,
                "course_link": null,
                "url": "https://www.credential.net/1234",
                "private": false,
                "certificate": {
                    "image": {
                        "preview": "https://staging.accredible.com/v1/frontend/credential_website_embed_image/certificate/10000005"
                    }
                },
                "badge": {
                    "image": {
                        "preview": "https://staging.accredible.com/v1/frontend/credential_badge_image/10000005"
                    }
                },
                "meta_data": null
            }
        }

# Group Credentials
Credentials are the core object in Accredible. They collect all of the data related to a course/training/achievment and a recipient.

You should create a credential for each achievement completion that a recipient has. For example if John Doe finishes the Programming 101 course we should create one credential to represent that. If John Doe achieves something else then he would need a new credential.

By default a Group doesn't allow duplicate credentials to be issued to the same recipient. You can update this setting if you would like to do so: https://help.accredible.com/can-i-allow-duplicate-credentials-in-a-group

## Credentials [/v1/credentials]

#### Create a New Credential [POST]

You create a Credential with optional EvidenceItems and References using this action. Please make sure that you've created a group on your dashboard before creating a Credential. If you haven't then [create a group in the dashboard](https://dashboard.accredible.com/issuer/dashboard/group/new?edit=information-and-appearance) or use [this API request](https://accrediblecredentialapi.docs.apiary.io/reference/groups/groups/create-a-group).

This endpoint requires a JSON object containing a Credential.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY

    + Attributes
        + id (string, optional) - The unique ID of the credential. If you supply your own internal ID we'll use this as a reference for the Credential. If not we'll assign an ID.
        + recipient.name (string, required) - The name of the recipient the credential is issued to.
        + recipient.email (string, required) - The recipient's email address.
        + recipient.id (string, optional) - The recipient's user ID as defined by your organization. This alllows you to easily map your recipients to their Credentials regardless of changes to their email address.
        + recipient.meta_data(object, optional) - You can use this parameter to attach key-value strings to the object. Meta data is useful for storing additional, structured information on an object.
        + group_id (number, required) -  Group Id to which the credential should belong. Legacy field. Group name may be used in place of a Group ID.
        + name (string, optional) - The Credential/course name displayed to recipients. This is required if the Group the Credential belongs to doesn't have a Course Name set.
        + description (string, optional) - The credential/course description displayed to recipients. This is required if the Group the Credential belongs to doesn't have a Course Description set.
        + custom_attributes (object, optional) - Custom variables to display on the Credential. These should be added to the design using the visual editor. Data should be formatted as a JSON hash where keys are the custom attribute names and the values are the values to be displayed on the Credential.
        + issued_on (string, optional) - Date of issue, the default is when the credential is created. Format: DD/MM/YYYY
        + expired_on (string, optional) - Date you would like the credential to expire on, null by default. Format: DD/MM/YYYY
        + complete (boolean, optional) - Whether the achievement is complete or still in progress, true by default.
        + private (boolean, optional) - Whether to make credential private. When it is set to `true`, the Credential will be private and visible only to its recipient who has signed into credential.net. If no value is set, the default value will be automatically assigned based on `Group.generate_private_credential` and `Department.generate_private_credential`. `Department.generate_private_credential` will be used as the default when `Group.generate_private_credential` is set to `null`. `Group.generate_private_credential` will override `Department.generate_private_credential` and be used as the default when it is set to `true` or `false`.
        + approve (boolean, optional) - Whether to publish credential at the time of creation. By default this is true but settings at dashboard for sandbox_mode take precendence.
        + allow_supplemental_evidence (boolean, optional) - Whether to allow recipients to add their own supplemental evidence to the Credential, true by default.
        + allow_supplemental_references (boolean, optional) - Whether to allow recipients to add their own supplemental references to the credential, true by default.
        + evidence_items (array, optional) - Evidence to add to this credential, that provide more information about how the recipient met the achievement. See http://docs.accrediblecredentialapi.apiary.io/#reference/evidence-items/evidence-item/create-a-new-evidence-item for fields. Typically this would include work samples for a course.
        + references (array, optional) - References to add to this Credential, that provide more information about how the recipient met the achievement. see http://docs.accrediblecredentialapi.apiary.io/#reference/references/reference/create-a-new-reference for fields. Typically this would be a peer, teacher or manager giving their feedback.
        + meta_data (object, optional) - You can use this parameter to attach key-value strings to the object. Meta data is useful for storing additional, structured information on an object.

    + Body

            {
                "credential": {
                    "recipient": {
                        "name": "John Doe",
                        "email": "person@example.com",
                        "id": "PK-17993",
                        "meta_data": {
                            "credential_batch": "772"
                        }
                    },
                    "name": "Credential Name",
                    "group_name": "course1234",
                    "group_id": 23,
                    "description": null,
                    "issued_on": "2014-06-14",
                    "evidence_items": [
                        {
                            "description": "Report card including all grades",
                            "url": "http://www.awesomelearningexample.com/johndoe/reportcard",
                            "category": "url"
                        },
                        {
                            "description": "Final essay",
                            "file": "https://s3.amazonaws.com/accredible_api_evidence_items/files/12/original/open-uri20140316-15266-1m3by6h.jpeg",
                            "category": "file"
                        }
                    ],
                    "references": [
                        {
                            "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                            "referee": {
                                "name": "Jane Doe",
                                "email": "person2@example.com",
                                "avatar": "https://placehold.it/100x100",
                                "url": "https://any-url.com"
                            },
                            "relationship": "managed"
                        }
                    ],
                    "custom_attributes": {
                            "custom_variables": "some value",
                            "dob": "29 jan 1970"
                    },
                    "meta_data": {
                            "batch_id": "TK210"
                    }
                }
            }

+ Response 200 (application/json)

        {
            "credential": {
                "id": "10000005",
                "name": "Example Certificate",
                "description": "This is an example description - you can write anything you want here.\n\nWe recommend describing the achievement.",
                "approve": true,
                "grade": null,
                "complete": true,
                "issued_on": "2014-08-14",
                "course_link": "https://www.accredible.com",
                "custom_attributes": {
                    "Location": "London"
                },
                "expired_on": null,
                "group_name": "Example Certificate Design",
                "group_id": 9549,
                "url": "https://www.credential.net/10000005",
                "encoded_id": "10000005",
                "private": false,
                "seo_image": "https://api.accredible.com/v1/frontend/credential_seo_image/10000005",
                "certificate": {
                    "image": {
                        "preview": "https://api.accredible.com/v1/frontend/credential_website_embed_image/certificate/10000005"
                    }
                },
                "badge": {
                    "image": {
                        "preview": "https://api.accredible.com/v1/frontend/credential_badge_image/10000005"
                    }
                },
                "evidence_items": [
                    {
                        "id": 826,
                        "description": "Final Grade",
                        "preview_image_url": null,
                        "link_url": null,
                        "type": "grade",
                        "string_object": {
                          "grade": 80
                        },
                        "supplemental": false,
                        "position": 1
                    },
                    {
                        "id": 10,
                        "description": "Presentation",
                        "preview_image_url": "https://s3.amazonaws.com/staging_accredible_api_evidence_items/previews/10/medium/open-uri20140316-15300-14jngj.jpg?1408372366",
                        "link_url": "https://s3.amazonaws.com/staging_accredible_api_evidence_items/files/10/original/open-uri20140316-15300-14jngj.pdf",
                        "type": "file",
                        "string_object": null,
                        "supplemental": true,
                        "position": 4
                    }
                ],
                "references": [
                    {
                        "id": 2,
                        "description": "Although he had difficulty with the course material at first, John learned a lot throughout the course. His final project was one of the best in his class.",
                        "relationship": "mentored",
                        "supplemental": false,
                        "approve": true,
                        "referee": {
                            "name": "Example Person",
                            "email": null,
                            "avatar": "https://s3.amazonaws.com/staging_accredible_api_individuals/images/4/thumb/open-uri20140815-11960-1r0hppg?1408416647"
                        }
                    }
                ],
                "recipient": {
                    "name": "Jordan Smith",
                    "email": "jor@dan.org",
                    "id": "ct992",
                    "meta_data": {
                        "bar": "foo"
                    }
                },
                "issuer": {
                    "name": "Example Organization",
                    "description": null,
                    "url": "http://www.accredible.com",
                    "id": 4897
                },
                "meta_data": {
                    "foo": "bar"
                }
            }
        }

## Bulk create Credentials [/v1/credentials/bulk_create]

### Bulk Create credentials [POST]

Create bulk Credentials using this action. It requires a JSON object containing credentials in an array.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY

    + Attributes
        + credentials (array, required) - Array of the credentials payload all field applicable which is in create credential endpoint.

    + Body

            {
                "credentials": [
                    {
                        "recipient":
                        {
                            "name": "John Doe", "email": "student@example.com" }, "group_id": "22625"
                        },
                    {
                        "recipient":
                        {
                            "name": "John Doe", "email": "student@example.com" }, "group_id": "62430"
                        }
                ]
            }

+ Response 200 (application/json)

        [
            {
                "credential": {
                    "id": 1234,
                    "recipient": {
                        "name": "John Doe",
                        "email": "person2@example.com",
                        "id": 232,
                        "meta_data": null
                    },
                    "issuer": {
                        "name": "Course Provider",
                        "url": "http://www.awesomelearningexample.com",
                        "description": "Technical courses at an introductory level..."
                    },
                    "name": "Credential Name",
                    "description": "A detailed description of what the credential is for",
                    "issued_on": "2014-06-14",
                    "group_name": "Test Group",
                    "url": "https://www.credential.net/10000005",
                    "grade": null,
                    "complete": true,

                    "expired_on": null,
                    "custom_attibutes": null,
                    "course_link": null,
                    "meta_data": null
                },
            {
                "credential": {
                    "id": 1234,
                    "recipient": {
                        "name": "John Doe",
                        "email": "person2@example.com",
                        "id": 2232,
                        "meta_data": {
                            "bar": "foo"
                        }
                    },
                    "issuer": {
                    "name": "Course Provider",
                    "url": "http://www.awesomelearningexample.com",
                    "description": "Technical courses at an introductory level..."
                    },
                    "name": "Credential Name",
                    "description": "A detailed description of what the credential is for",
                    "issued_on": "2014-06-14",
                    "group_name": "Test Group",
                    "grade": null,
                    "complete": true,
                    "expired_on": null,
                    "custom_attibutes": null,
                    "course_link": null,
                    "meta_data": {
                        "checked_by": "CP Leung"
                    }
                }
            }
        ]


## Credential [/v1/credentials/{id}]

### View a Credential [GET]

+ Parameters
    + id (string) - ID of the Credential in the form of an integer or string for the particular Credential requested.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

+ Response 200 (application/json)

        {
            "credential": {
                "id": "10000005",
                "name": "Example Certificate",
                "description": "This is an example description - you can write anything you want here.\n\nWe recommend describing the achievement.",
                "approve": true,
                "grade": null,
                "complete": true,
                "issued_on": "2014-08-14",
                "course_link": "https://www.accredible.com",
                "custom_attributes": {
                    "Location": "London"
                },
                "expired_on": null,
                "group_name": "Example Certificate Design",
                "group_id": 9549,
                "url": "https://www.credential.net/10000005",
                "encoded_id": "10000005",
                "private": false,
                "seo_image": "https://api.accredible.com/v1/frontend/credential_seo_image/10000005",
                "certificate": {
                    "image": {
                        "preview": "https://api.accredible.com/v1/frontend/credential_website_embed_image/certificate/10000005"
                    }
                },
                "badge": {
                    "image": {
                        "preview": "https://api.accredible.com/v1/frontend/credential_badge_image/10000005"
                    }
                },
                "evidence_items": [
                    {
                        "id": 826,
                        "description": "Final Grade",
                        "preview_image_url": null,
                        "link_url": null,
                        "type": "grade",
                        "string_object": {
                          "grade": 80
                        },
                        "supplemental": false,
                        "position": 1
                    },
                    {
                        "id": 10,
                        "description": "Presentation",
                        "preview_image_url": "https://s3.amazonaws.com/staging_accredible_api_evidence_items/previews/10/medium/open-uri20140316-15300-14jngj.jpg?1408372366",
                        "link_url": "https://s3.amazonaws.com/staging_accredible_api_evidence_items/files/10/original/open-uri20140316-15300-14jngj.pdf",
                        "type": "file",
                        "string_object": null,
                        "supplemental": true,
                        "position": 4
                    }
                ],
                "references": [
                    {
                        "id": 2,
                        "description": "Although he had difficulty with the course material at first, John learned a lot throughout the course. His final project was one of the best in his class.",
                        "relationship": "mentored",
                        "supplemental": false,
                        "approve": true,
                        "referee": {
                            "name": "Example Person",
                            "email": null,
                            "avatar": "https://s3.amazonaws.com/staging_accredible_api_individuals/images/4/thumb/open-uri20140815-11960-1r0hppg?1408416647"
                        }
                    }
                ],
                "recipient": {
                    "name": "Jordan Smith",
                    "email": "jor@dan.org",
                    "id": "dw373",
                    "meta_data": null
                },
                "issuer": {
                    "name": "Example Organization",
                    "description": null,
                    "url": "http://www.accredible.com",
                    "id": 4897
                },
                "meta_data": null
            }
        }


### Update a Credential [PUT]

+ Parameters
    + id (string, optional) - The unique ID of the credential. If you supply your own internal ID we'll use this as a reference for the Credential. If not we'll assign an ID.

+ Request (application/json)

    + Headers

                Authorization: Token token=YOUR API _KEY

    + Attributes
        + id (string, optional) - The unique ID of the credential. If you supply your own internal ID we'll use this as a reference for the Credential. If not we'll assign an ID.
        + recipient.name (string, required) - The name of the recipient the credential is issued to.
        + recipient.email (string, required) - The recipient's email address.
        + recipient.id (string, optional) - The recipient's user ID as defined by your organization. This alllows you to easily map your recipients to their Credentials regardless of changes to their email address.
        + recipient.meta_data (object, optional) - You can use this parameter to attach key-value strings to the object. Meta data is useful for storing additional, structured information on an object.
        + group_id (number, required) -  Group Id to which the credential should belong. Legacy field. Group name may be used in place of a Group ID.
        + name (string, optional) - The Credential/course name displayed to recipients. This is required if the Group the Credential belongs to doesn't have a Course Name set.
        + description (string, optional) - The credential/course description displayed to recipients. This is required if the Group the Credential belongs to doesn't have a Course Description set.
        + custom_attributes (object, optional) - Custom variables to display on the Credential. These should be added to the design using the visual editor. Data should be formatted as a JSON hash where keys are the custom attribute names and the values are the values to be displayed on the Credential.
        + issued_on (string, optional) - Date of issue, the default is when the credential is created. Format: DD/MM/YYYY
        + expired_on (string, optional) - Date you would like the credential to expire on, null by default. Format: DD/MM/YYYY
        + complete (boolean, optional) - Whether the achievement is complete or still in progress, true by default.
        + allow_supplemental_evidence (boolean, optional) - Whether to allow recipients to add their own supplemental evidence to the Credential, true by default.
        + allow_supplemental_references (boolean, optional) - Whether to allow recipients to add their own supplemental references to the credential, true by default.
        + evidence_items (array, optional) - Evidence to add to this credential, that provide more information about how the recipient met the achievement. See http://docs.accrediblecredentialapi.apiary.io/#reference/evidence-items/evidence-item/create-a-new-evidence-item for fields. Typically this would include work samples for a course.
        + references (array, optional) - References to add to this Credential, that provide more information about how the recipient met the achievement. see http://docs.accrediblecredentialapi.apiary.io/#reference/references/reference/create-a-new-reference for fields. Typically this would be a peer, teacher or manager giving their feedback.
        + meta_data (object, optional) - You can use this parameter to attach key-value strings to the object. Meta data is useful for storing additional, structured information on an object.

    + Body

            {
              "credential": {
                "approve": true
                }
            }

+ Response 200 (application/json)

        {
            "credential": {
                "id": "10000005",
                "name": "Example Certificate",
                "description": "This is an example description - you can write anything you want here.\n\nWe recommend describing the achievement.",
                "approve": true,
                "grade": null,
                "complete": true,
                "issued_on": "2014-08-14",
                "course_link": "https://www.accredible.com",
                "custom_attributes": {
                    "Location": "London"
                },
                "expired_on": null,
                "group_name": "Example Certificate Design",
                "group_id": 9549,
                "url": "https://www.credential.net/10000005",
                "encoded_id": "10000005",
                "private": false,
                "seo_image": "https://api.accredible.com/v1/frontend/credential_seo_image/10000005",
                "certificate": {
                    "image": {
                        "preview": "https://api.accredible.com/v1/frontend/credential_website_embed_image/certificate/10000005"
                    }
                },
                "badge": {
                    "image": {
                        "preview": "https://api.accredible.com/v1/frontend/credential_badge_image/10000005"
                    }
                },
                "evidence_items": [
                    {
                        "id": 826,
                        "description": "Final Grade",
                        "preview_image_url": null,
                        "link_url": null,
                        "type": "grade",
                        "string_object": {
                          "grade": 80
                        },
                        "supplemental": false,
                        "position": 1
                    },
                    {
                        "id": 10,
                        "description": "Presentation",
                        "preview_image_url": "https://s3.amazonaws.com/staging_accredible_api_evidence_items/previews/10/medium/open-uri20140316-15300-14jngj.jpg?1408372366",
                        "link_url": "https://s3.amazonaws.com/staging_accredible_api_evidence_items/files/10/original/open-uri20140316-15300-14jngj.pdf",
                        "type": "file",
                        "string_object": null,
                        "supplemental": true,
                        "position": 4
                    }
                ],
                "references": [
                    {
                        "id": 2,
                        "description": "Although he had difficulty with the course material at first, John learned a lot throughout the course. His final project was one of the best in his class.",
                        "relationship": "mentored",
                        "supplemental": false,
                        "approve": true,
                        "referee": {
                            "name": "Example Person",
                            "email": "email@example.com"
                            "avatar": "https://s3.amazonaws.com/staging_accredible_api_individuals/images/4/thumb/open-uri20140815-11960-1r0hppg?1408416647"
                        }
                    }
                ],
                "recipient": {
                    "name": "Jordan Smith",
                    "email": "jor@dan.org",
                    "id": 236,
                    "meta_data": {
                        "zip_code": "35956"
                    }
                },
                "issuer": {
                    "name": "Example Organization",
                    "description": null,
                    "url": "http://www.accredible.com",
                    "id": 4897
                },
                "meta_data": {
                    "foo": "bar"
                }
            }
        }

### Delete a Credential [DELETE]

+ Parameters
    + id (string) - ID of the credential for the particular Credential requested.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

+ Response 200 (application/json)

        {
            "credential": {
                "id": "10000005",
                "name": "Example Certificate",
                "description": "This is an example description - you can write anything you want here.\n\nWe recommend describing the achievement.",
                "approve": true,
                "grade": null,
                "complete": true,
                "issued_on": "2014-08-14",
                "course_link": "https://www.accredible.com",
                "custom_attributes": {
                    "Location": "London"
                },
                "expired_on": null,
                "group_name": "Example Certificate Design",
                "group_id": 9549,
                "url": "https://www.credential.net/10000005",
                "encoded_id": "10000005",
                "private": false,
                "seo_image": "https://api.accredible.com/v1/frontend/credential_seo_image/10000005",
                "certificate": {
                    "image": {
                        "preview": "https://api.accredible.com/v1/frontend/credential_website_embed_image/certificate/10000005"
                    }
                },
                "badge": {
                    "image": {
                        "preview": "https://api.accredible.com/v1/frontend/credential_badge_image/10000005"
                    }
                },
                "evidence_items": [
                    {
                        "id": 826,
                        "description": "Final Grade",
                        "preview_image_url": null,
                        "link_url": null,
                        "type": "grade",
                        "string_object": {
                          "grade": 80
                        },
                        "supplemental": false,
                        "position": 1
                    },
                    {
                        "id": 10,
                        "description": "Presentation",
                        "preview_image_url": "https://s3.amazonaws.com/staging_accredible_api_evidence_items/previews/10/medium/open-uri20140316-15300-14jngj.jpg?1408372366",
                        "link_url": "https://s3.amazonaws.com/staging_accredible_api_evidence_items/files/10/original/open-uri20140316-15300-14jngj.pdf",
                        "type": "file",
                        "string_object": null,
                        "supplemental": true,
                        "position": 4
                    }
                ],
                "references": [
                    {
                        "id": 2,
                        "description": "Although he had difficulty with the course material at first, John learned a lot throughout the course. His final project was one of the best in his class.",
                        "relationship": "mentored",
                        "supplemental": false,
                        "approve": true,
                        "referee": {
                            "name": "Example Person",
                            "email": null,
                            "avatar": "https://s3.amazonaws.com/staging_accredible_api_individuals/images/4/thumb/open-uri20140815-11960-1r0hppg?1408416647"
                        }
                    }
                ],
                "recipient": {
                    "name": "Jordan Smith",
                    "email": "jor@dan.org",
                    "id": "net772",
                    "meta_data": null
                },
                "issuer": {
                    "name": "Example Organization",
                    "description": null,
                    "url": "http://www.accredible.com",
                    "id": 4897
                },
                "meta_data": null
            }
        }

## All Credentials DEPRECATED [/v1/all_credentials{?group_id}{?email}{?page_size}{?page}{?recipient_id}]

### View many Credentials [GET]

+ Parameters
    + group_id (string, optional) - Limit the returned Credentials to a specific group ID.
    + email (string, optional) - Limit the returned Credentials to a specific recipient's email address.
    + recipient_id (string, optional) - Limit the returned Credentials to a specific recipient user identifier (ID) you set whilst creating Credentials.
    + license_id (string, optional) - Limit the returned Credential to a specific credential id you set whilst creating credential.
    + start_date (string, optional) - Date after which credentials issued should be return. Format: DD/MM/YYYY
    + end_date (string, optional) - Date before which credetials issued should be return. Format: DD/MM/YYYY
    + start_updated_date (string, optional) - Date after which credentials updated should be return. Format: DD/MM/YYYY
    + end_updated_date (string, optional) - Date before which credetials updated should be return. Format: DD/MM/YYYY
    + page_size(number, optional) - The pagination response size, default of 50.
    + page(number,optional) - The pagination page.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY

+ Response 200 (application/json)

        {
            "credentials": [
            {
                "id": 10250009,
                "name": "TestCourse",
                "description": "Test Description",
                "grade": null,
                "complete": true,
                "issued_on": "2015-07-03T07:10:04.000Z",
                "allow_supplemental_references": null,
                "allow_supplemental_evidence": null,
                "course_link": "http://example.com",
                "custom_attributes": null,
                "expired_on": null,
                "group_name": "test",
                "private": false,
                "recipient": {
                    "name": "John Doe",
                    "email": "person2@example.com",
                    "id": 772,
                    "meta_data": {
                        "zip_code": "10459"
                    }
                },
                "issuer": {
                    "name": "Example Provider",
                    "description": " Best place to manage online learning",
                    "url": "http://www.accredible.com"
                },
                "meta_data": {
                    "foo": "bar"
                }
            },
            {
                "id": 10250010,
                "name": "TestCourse",
                "description": "Test Description",
                "grade": null,
                "complete": true,
                "issued_on": "2015-07-03T07:10:04.000Z",
                "allow_supplemental_references": null,
                "allow_supplemental_evidence": null,
                "course_link": "http://example.com",
                "custom_attributes": null,
                "expired_on": null,
                "group_name": "test",
                "private": false,
                "recipient": {
                    "name": "John Doe",
                    "email": "person2@example.com",
                    "id": 883,
                    "meta_data": null
                },
                "issuer": {
                    "name": "Example Provider",
                    "description": " Best place to manage online learning",
                    "url": "http://www.accredible.com"
                },
                "meta_data": null
            }
        ],
           "meta": {
                "current_page": 1,
                "next_page": 2,
                "prev_page": null,
                "total_pages": 795,
                "total_count": 1590
            }
        }

## Search Credentials [/v1/credentials/search]

### Search for Credentials [POST]

+ Parameters
    + group_id (string, optional) - Limit the returned Credentials to a specific group ID.
    + recipient.name (string, optional) - Limit the returned Credentials to a recipient's name
    + recipient.email (string, optional) - Limit the returned Credentials to a specific recipient's email address.
    + recipient.id (string, optional) - Limit the returned Credentials to a specific recipient user identifier (ID) you set whilst creating Credentials.
    + recipient.meta_data (object, optional) - String key/values for client's own data on recipient
    + license_id (string, optional) - Limit the returned Credential to a specific credential id you set whilst creating credential.
    + meta_data (object, optional) - String key/values for client's own data on credential
    + start_date (string, optional) - Date after which credentials issued should be return. Format: DD/MM/YYYY
    + end_date (string, optional) - Date before which credetials issued should be return. Format: DD/MM/YYYY
    + start_updated_date (string, optional) - Date after which credentials updated should be return. Format: DD/MM/YYYY
    + end_updated_date (string, optional) - Date before which credetials updated should be return. Format: DD/MM/YYYY
    + page_size(number, optional) - The pagination response size, default of 50.
    + page(number,optional) - The pagination page.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY


    + Body

            {
              "meta_data": { "example": "value" }
            }

+ Response 200 (application/json)

        {
            "credentials": [
            {
                "id": 10250009,
                "name": "TestCourse",
                "description": "Test Description",
                "grade": null,
                "complete": true,
                "issued_on": "2015-07-03T07:10:04.000Z",
                "allow_supplemental_references": null,
                "allow_supplemental_evidence": null,
                "course_link": "http://example.com",
                "custom_attributes": null,
                "expired_on": null,
                "group_name": "test",
                "private": false,
                "recipient": {
                    "name": "John Doe",
                    "email": "person2@example.com",
                    "id": 772,
                    "meta_data": {
                        "zip_code": "10459"
                    }
                },
                "issuer": {
                    "name": "Example Provider",
                    "description": " Best place to manage online learning",
                    "url": "http://www.accredible.com"
                },
                "meta_data": {
                    "foo": "bar"
                }
            },
            {
                "id": 10250010,
                "name": "TestCourse",
                "description": "Test Description",
                "grade": null,
                "complete": true,
                "issued_on": "2015-07-03T07:10:04.000Z",
                "allow_supplemental_references": null,
                "allow_supplemental_evidence": null,
                "course_link": "http://example.com",
                "custom_attributes": null,
                "expired_on": null,
                "group_name": "test",
                "private": false,
                "recipient": {
                    "name": "John Doe",
                    "email": "person2@example.com",
                    "id": 883,
                    "meta_data": null
                },
                "issuer": {
                    "name": "Example Provider",
                    "description": " Best place to manage online learning",
                    "url": "http://www.accredible.com"
                },
                "meta_data": null
            }
        ],
           "meta": {
                "current_page": 1,
                "next_page": 2,
                "prev_page": null,
                "total_pages": 795,
                "total_count": 1590
            }
        }

## Generate PDFs [/v1/credentials/generate_pdf]

### Generate PDF for credentials [POST]

This endpoint takes credential_ids and generate pdfs. The endpoint returns zip file of folder having all pdfs requested.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY

    + Attributes
        + credential_ids (array, required) - ID's of credentials for which PDF need to be generated.

    + Body

            {
                "credential_ids": ["10000005", "10272642", "10299775"]
            }

+ Response 200 (application/json)

        {
            "file": "https://s3.amazonaws.com/staging_accredible_api_organizations/zip_pdf/a1VzM3lmSi9hUEpWL083RnNOUmF4eWN1aCtNNG1DVUNvVXBJekQwR2VWQT0.zip"
        }


## Generate PDF for single credential [/v1/credentials/generate_single_pdf/{id}]
### Generate PDF for a single credential [POST]

This endpoint takes id of published credential and generate pdf. The endpoint returns link to PDF requested.

+ Parameters
    + id (string) - ID of the Credential in the form of an integer or string for the particular Credential requested.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY

+ Response 200 (application/json)

        {
          "file": "https://s3.amazonaws.com/staging-pdf-certificate/10531400.pdf"
        }


## Credential Redirect [/v1/issuer/credential_redirect{?issuer_id}{?id}]

###Redirect to the Credential [GET]

This endpoint redirects to a particular Credential. You can supply your internal credential id of you'd like to redirect to. To make this work, you need to use your internal unique id while creating credential.

+ Request (application/json)


    + Attributes
        + issuer_id (number, required) - ID of your issuer account. Ask us to get this or use the endpont view-issuer-details.
        + id (string, required) - Provide the unique Credential Identifier you set whilst creating or updating a Credential.


+ Redirect 302



## BlockChain Credential [/v1/credentials/blockchain_data/{encoded_id}]

###Verify BlockChain Credential [GET]

This endpoint gives data for a blockchain recorded credential. It will help you verify authenticity of the credential on blockchain.

+ Parameters
    + encoded_id(string) - Encoded id of the credentials. unique id in the credentials url.


+ Request (application/json)

    + Attributes
        + key (string, optional) - If private credentials provide a key


+ Response 200 (application/json)

        {
          "data": {
          "credential_json_data": {
          "certificate": {
          "name": "Example Certificate Title",
          "issuer": {
          "name": "Example Organization",
          "url": "http://www.accredible.com",
          "id": "https://api.accredible.com/v1/obi/issuer_badge_classes/qOeq",
          "type": "Issuer",
          "email": "issuer+4897@accredible.com"
          },
          "type": "Certificate",
          "id": "https://www.credential.net/10000005",
          "description": "This is an example description - you can write anything you want here. We recommend describing the achievement."
          },
          "verify": {
          "signer": "abc",
          "attribute-signed": "uid",
          "type": "ECDSA(secp256k1)"
          },
          "assertion": {
          "issuedOn": "2014-08-14",
          "type": "Assertion",
          "uid": "10000005-0000-0000-0000-000000000000",
          "id": "https://api.accredible.com/v1/obi/badge_assertions/akobz1"
          },
          "type": "CertificateDocument",
          "@context": "https://w3id.org/blockcerts/v1",
          "recipient": {
          "familyName": "Jordan Smith",
          "hashed": true,
          "type": "email",
          "identity": "bUt3VFpyekE5Wmxxa0FRdExUZ3k5WkdVanRWU3JPNmxDVjdVZ2xkckJnVW9MVm5rYmtLSDZ6M3IvS2tMWnA5MS0tN0RwVVdIb1RJUzIyTnBjS20wcVpUdz09--d964109d91c7890715008e1749e0ee990c7ce9cb"
          }
          },
          "receipt": {
          "@context": "https://w3id.org/chainpoint/v2",
          "type": "ChainpointSHA256v2",
          "targetHash": "726245b5a11b7f94b756ee746f3b3ce18efdc492c615c32678dae1ca76a8667a",
          "merkleRoot": "e9aaf5d6e0021deb260608991fbb45d1c3ccb4553ea710635975834909bd8314",
          "proof": [
          {
          "left": "ab4f843e61e1261e832e97807f37d51d851f8aaac3f44216914f67b7588634ad"
          },
          {
          "left": "91ad43d509dabfc0a6d23167a10707a63e8ab7f9fa949d6c0aca763c64fefdb6"
          },
          {
          "right": "9047877604cecc72d9bc614375b14ff0ce02b231d51a53fe33ce24e39cf3e6c4"
          }
          ],
          "anchors": [
          {
          "type": "BTCOpReturn",
          "sourceId": "707f86dc790338c5bddb19188c1c3f46f95a346a7693cc8c772b5e9252099c54"
          }
          ]
          }
          }
          }


## Credential Analytics [/v1/credentials/analytics/{id}]

A full list of events can be found here: https://help.accredible.com/credential-analytic-events

### View Credential Analytics [POST]

+ Parameters
    + id(string) - Id of the credential.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY

+ Response 200 (application/json)

        {
           "analytics": [
           {
                "credential_id": 10533900,
                "event": "privacy_updated",
                "created_at": "2018-02-13T07:00:00.000Z"
            },
            {
                "credential_id": 10533900,
                "event": "recipient_view_certificate",
                "created_at": "2018-02-13T07:00:00.000Z"
            },
            {
                "credential_id": 10533900,
                "event": "credential_user_verified",
                "created_at": "2018-02-13T07:00:00.000Z"
            }
        ]
    }



# Group Groups
Groups are similar to a course or a folder of Credentials. They contain information about the achievement and have multiple Credentials attached to them.

For example you should create a group for the Introduction to Programming course. You'd provide the Course Name, Course Descripion and Course URL. In the future you can pass the name or ID of this group when creating a credential so that the credential is passed all the information relating to the achievement.

## Groups [/v1/issuer/groups]

### Create a Group [POST]

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY

    + Attributes
        + name (string, required) - Name of the group (for your reference and never shown to the recipient).
        + course_name (string, required) - Name of the course or achievement. This is visible to the recipient.
        + course_description (string, required) - Description of the course or achievement. This is visible to the recipient.
        + course_link (string, optional) - Link to the web page with information related to this Credential. Typically this is a course information or event information page.
        + language (string, optional) - Language for the group. Currently we support "en", "es", "vi", "pt", "ja", "fr", "da", "nl", "fi", "no", "nb", "ro", "sv", "th", "tw", "zh", "tr", "ar", "he", "ms" and "de". Default language is en.
        + attach_pdf (boolean, optional) - PDF of the Credential should be attached to email when recipient is informed. Default is false.
        + blockchain (boolean, optional) - Enable or disable recording of these Credentials on a Blockchain.
        + design_id (number, optional) - DEPRECATED. Certificate Design which the Group will use to display Credentials.
        + certificate_design_id (number, optional) - Certificate Design which the Group will use to display Credentials.
        + badge_design_id (number, optional) - Badge Design which the Group will use to display Credentials.
        + department_id (number, optional) - Department that the group belongs to. If not defined the group will be assigned to the organizations default department.
        + meta_data (object, optional) - You can use this parameter to attach key-value strings to the object. Meta data is useful for storing additional, structured information on an object.
        + learning_outcomes(array, optional) - Searchable keywords identifying skills credential-holders need to demonstrate (or have learned) in the process of earning this credential.
        + generate_private_credential (boolean, optional) - The default value of `Credential.private` for the Group. The supported values are `true`, `false`, and `null`. When this is set to `true` or `false`, it will override `Department.generate_private_credential` and be used as the default of `Credential.private` when creating a new `Credential`. When this is set to `null`, it won't override `Department.generate_private_credential` which will be used for the default of `Credential.private` instead.
        
    + Body

            {
                "group": {
                    "name": "new group",
                    "course_name": "Intro to Prgramming",
                    "course_description": "Description of course",
                    "course_link": "http://www.example.com",
                    "language": "en",
                    "attach_pdf": true,
                    "design_id": null,
                    "blockchain": false,
                    "certificate_design_id": null,
                    "badge_design_id": null,
                    "department_id": 123,
                    "meta_data": {
                        "batch_id": "271"
                    },
                    "learning_outcomes": ["Reading Books", "Writing Essays"],
                    "generate_private_credential": false
                }
            }


+ Response 200 (application/json)

        {
            "group": {
                "id": 12472,
                "name": "new group",
                "course_description": "Desscription of course",
                "course_name": "Intro to Programming",
                "learning_outcomes": null,
                "attach_pdf": true,
                "course_link": "http://www.example.com",
                "language": "en",
                "design_name": "test",
                "updated_at": "2016-08-29T07:03:25.000Z",
                "created_at": "2016-08-29T06:14:18.000Z",
                "design_id": 23,
                "blockchain": false,
                "certificate_design_id": null,
                "badge_design_id": null,
                "department_id": 123,
                "meta_data": {
                    "foo": "bar"
                },
                "learning_outcomes": ["Skill One", "Skill Two"],
                "generate_private_credential": false
            }
        }

## Group [/v1/issuer/groups/{group_id}]

### View a Group [GET]
+ Parameters
    + group_id (number) - ID of the group in the form of an integer for the particular group requested.  You can obtain the group ID from the all groups request.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

+ Response 200 (application/json)

      {
          "group": {
            "id": 12472,
            "name": "new group",
            "course_description": "Desscription of course",
            "course_name": "Intro to Programming",
            "learning_outcomes": null,
            "attach_pdf": true,
            "course_link": "http://www.example.com",
            "language": "en",
            "design_name": "test",
            "updated_at": "2016-08-29T07:03:25.000Z",
            "created_at": "2016-08-29T06:14:18.000Z",
            "design_id": 23,
            "blockchain": false,
            "certificate_design_id": null,
            "badge_design_id": null,
            "department_id": 123,
            "meta_data": null,
            "generate_private_credential": false
          }
      }


### Update a Group [PUT]

+ Parameters
    + group_id (number) - ID of the group in the form of an integer for the particular group requested. You can obtain the group ID from the all groups request.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

    + Attributes
        + name (string,required) - Name of the group (for your reference and never shown to the recipient).
        + course_name (string,required) - Name of the course or achievement. This is visible to the recipient.
        + course_description (string,required) - Description of the course or achievement. This is visible to the recipient.
        + course_link (string,optional) - Link to the web page with information related to this Credential. Typically this is a course information or event information page.
        + langauge (string, optional) - Language for the group. Currently we support "en", "es", "vi", "pt", "ja", "fr", "da", "nl", "fi", "no", "nb", "ro", "sv", "th", "tw", "zh", "tr", "ar", "he", "ms" and "de". Default language is en.
        + attach_pdf (boolean, optional) - PDF of the Credential should be attached to email when recipient is informed. Default is false.
        + blockchain (boolean, optional) - Enable or disable recording of these Credentials on a Blockchain.
        + design_id (number,optional) - DEPRECATED. Certificate Design which the Group will use to display Credentials.
        + certificate_design_id (number,optional) - Certificate Design which the Group will use to display Credentials.
        + badge_design_id (number,optional) - Badge Design which the Group will use to display Credentials.
        + department_id (number,optional) - Department that the group belongs to. If not defined the group will be assigned to the organizations default department.
        + meta_data (object, optional) - You can use this parameter to attach key-value strings to the object. Meta data is useful for storing additional, structured information on an object.
        + learning_outcomes(array, optional) - Searchable keywords identifying skills credential-holders need to demonstrate (or have learned) in the process of earning this credential.
        + generate_private_credential (boolean, optional) - The default value of `Credential.private` for the Group. The supported values are `true`, `false`, and `null`. When this is set to `true` or `false`, it will override `Department.generate_private_credential` and be used as the default of `Credential.private` when creating a new `Credential`. When this is set to `null`, it won't override `Department.generate_private_credential` which will be used for the default of `Credential.private` instead.

    + Body

            {
               "group": {
                    "name": "updated new group",
                    "course_name": "updated course name"
                }
            }

+ Response 200 (application/json)

        {
          "group": {
            "id": 12472,
            "name": "updated new group",
            "course_description": "Desscription of course",
            "course_name": "updated course name",
            "learning_outcomes": null,
            "attach_pdf": true,
            "course_link": "http://www.example.com",
            "language": "en",
            "design_name": "test",
            "updated_at": "2016-08-29T07:03:25.000Z",
            "created_at": "2016-08-29T06:14:18.000Z",
            "design_id": 23,
            "blockchain": false,
            "certificate_design_id": null,
            "badge_design_id": null,
            "department_id": 123,
            "meta_data": {
                "foo": "bar"
            },
            "generate_private_credential": false
          }
        }

### Delete a Group [DELETE]

+ Parameters
    + group_id (number) - ID of the Group in the form of an integer for the particular Group requested. You can obtain the Group ID from the all groups request.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

+ Response 200 (application/json)

        {
          "group": {
            "id": 12472,
            "name": "new group",
            "course_description": "Desscription of course",
            "course_name": "Intro to Programming",
            "learning_outcomes": null,
            "attach_pdf": true,
            "course_link": "http://www.example.com",
            "language": "en",
            "design_name": "test",
            "updated_at": "2016-08-29T07:03:25.000Z",
            "created_at": "2016-08-29T06:14:18.000Z",
            "design_id": 23,
            "blockchain": false,
            "certificate_design_id": null,
            "badge_design_id": null,
            "department_id": 123,
            "meta_data": null,
            "generate_private_credential": false
            }
        }


## All Groups DEPRECATED [/v1/issuer/all_groups{?name}{?page_size}{?page}]

### View all Groups [GET]

+ Parameters
    + name(string, optional) - Limit the list of Groups to those named with the given string.
    + page_size(number, optional) - The pagination response size, defualt is 50.
    + page(number,optional) - The pagination page.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

+ Response 200 (application/json)

        {
            "groups": [
                {
                    "id": 12472,
                    "name": "new group",
                    "course_description": "Desscription of course",
                    "course_name": "Intro to Programming",
                    "learning_outcomes": null,
                    "attach_pdf": true,
                    "course_link": "http://www.example.com",
                    "language": "en",
                    "design_name": "test",
                    "updated_at": "2016-08-29T07:03:25.000Z",
                    "created_at": "2016-08-29T06:14:18.000Z",
                    "design_id": 23,
                    "blockchain": false,
                    "certificate_design_id": 23,
                    "badge_design_id": null,
                    "department_id": 123,
                    "meta_data": {
                        "course_id": "TK764"
                    },
                    "generate_private_credential": false
                },
                {
                    "id": 12473,
                    "name": "new group",
                    "course_description": "Desscription of course",
                    "course_name": "Intro to Programming",
                    "learning_outcomes": null,
                    "attach_pdf": false,
                    "course_link": "http://www.example.com",
                    "language": "en",
                    "design_name": "test",
                    "updated_at": "2016-08-29T07:03:25.000Z",
                    "created_at": "2016-08-29T06:14:18.000Z",
                    "blockchain": true,
                    "design_id": null,
                    "certificate_design_id": null,
                    "badge_design_id": 345,
                    "department_id": 123,
                    "meta_data": {
                        "course_id": "TK765"
                    },
                    "generate_private_credential": false
                }
            ],
            "meta": {
                "current_page": 1,
                "next_page": 2,
                "prev_page": null,
                "total_pages": 119,
                "total_count": 238
            }
        }


## Search Groups [/v1/issuer/groups/search]

### Search for Groups [POST]

+ Parameters
    + name(string, optional) - Limit the list of Groups to those named with the given string.
    + meta_data (object, optional) - String key/values for client's own data on group
    + page_size(number, optional) - The pagination response size, default of 50.
    + page(number,optional) - The pagination page.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY

    + Body

        {
            meta_data: { "key": "value" }
        }

+ Response 200 (application/json)

        {
            "groups": [
                {
                    "id": 12472,
                    "name": "new group",
                    "course_description": "Desscription of course",
                    "course_name": "Intro to Programming",
                    "learning_outcomes": null,
                    "attach_pdf": true,
                    "course_link": "http://www.example.com",
                    "language": "en",
                    "design_name": "test",
                    "updated_at": "2016-08-29T07:03:25.000Z",
                    "created_at": "2016-08-29T06:14:18.000Z",
                    "design_id": 23,
                    "blockchain": false,
                    "certificate_design_id": 23,
                    "badge_design_id": null,
                    "department_id": 123,
                    "meta_data": {
                        "course_id": "TK764"
                    },
                    "generate_private_credential": false
                },
                {
                    "id": 12473,
                    "name": "new group",
                    "course_description": "Desscription of course",
                    "course_name": "Intro to Programming",
                    "learning_outcomes": ["skill one", "skill two"],
                    "attach_pdf": false,
                    "course_link": "http://www.example.com",
                    "language": "en",
                    "design_name": "test",
                    "updated_at": "2016-08-29T07:03:25.000Z",
                    "created_at": "2016-08-29T06:14:18.000Z",
                    "blockchain": true,
                    "design_id": null,
                    "certificate_design_id": null,
                    "badge_design_id": 345,
                    "department_id": 123,
                    "meta_data": {
                        "course_id": "TK765"
                    },
                    "generate_private_credential": false
                }
            ],
            "meta": {
                "current_page": 1,
                "next_page": 2,
                "prev_page": null,
                "total_pages": 119,
                "total_count": 238
            }
        }

# Group Designs

## Designs [/v1/designs{?kind}{?department_id}]
Designs provide a visual specification for how a Credential should be rendered. Design can be used accross multiple Groups.

For example if we have three courses: Intro to Basic Programming, Intro to Advanced Programming and Intro to DevOps each of these may have the same design for their Credentials. When creating or updating their corresponding Groups you would attach the desired design accordingly.

### Create a Design [POST]

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY

    + Attributes
        + name (string,required) - Name of the Design (for your reference and never shown to the recipient).
        + kind (string,required) - Must be "certificate" or "badge" to specify the Design type.
        + encoded_content (string,required) - The encoded content of the design.
        + background_bleeds (boolean,optional) - Specifies if the design should allow print bleeding.
        + orientation (string,optional) - Must be "landscape" or "portrait" to specify a design's paper orientation.
        + size (string,optional) - Must be "us-letter" or "a4" to specify a design's paper size.
        + department_id (number,optional) - Department that the Design belongs to. If not defined the Design will be assigned to the organizations default department.
        + meta_data (object, optional) - You can use this parameter to attach key-value strings to the object. Meta data is useful for storing additional, structured information on an object.

    + Body

            {
                "design": {
                    "name": "new design",
                    "kind": "certificate",
                    "encoded_content": "31884284f406b9e481038c86ca81031031884284f406b9e481038c86ca810310",
                    "background_bleeds": true,
                    "orientation": "landscape",
                    "size": "a4",
                    "department_id": 123
                }
            }


+ Response 200 (application/json)

        {
            "design": {
                "id": 12472,
                "name": "new design",
                "kind": "certificate",
                "encoded_content": "31884284f406b9e481038c86ca81031031884284f406b9e481038c86ca810310",
                "background_bleeds": true,
                "orientation": "landscape",
                "size": "a4",
                "department_id": 123
                "updated_at": "2016-08-29T07:03:25.000Z",
                "created_at": "2016-08-29T06:14:18.000Z",
                "rasterized_content_url": "https://api.accredible.com/v1/example",
                "groups": [
                    {
                        "id": 61267,
                        "name": "group 1",
                        "updated_at": "2016-08-30T10:26:25.000Z",
                        "credentials_count": 1
                    }
                ],
                "meta_data": {
                    "example": "value"
                }
            }
        }

### View all Designs DEPRECATED [GET]

+ Parameters
    + kind (string,optional) - Limit results to just "certificates" or "badges".
    + department_id (number,optional) - Limit results to a particular Department.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY



+ Response 200 (application/json)

        {
            "designs": [
                        {
                            id": 12472,
                            "name": "new design",
                            "kind": "certificate",
                            "encoded_content": "31884284f406b9e481038c86ca81031031884284f406b9e481038c86ca810310",
                            "background_bleeds": true,
                            "orientation": "landscape",
                            "size": "a4",
                            "department_id": 123
                            "updated_at": "2016-08-29T07:03:25.000Z",
                            "created_at": "2016-08-29T06:14:18.000Z",
                            "rasterized_content_url": "https://api.accredible.com/v1/example",
                            "groups": [
                                {
                                    "id": 61267,
                                    "name": "group 1",
                                    "updated_at": "2016-08-30T10:26:25.000Z",
                                    "credentials_count": 1
                                }
                            ],
                            "meta_data": {
                                "example": "value"
                            }
                        },
                        {
                            id": 124721,
                            "name": "new design 2",
                            "kind": "certificate",
                            "encoded_content": "31824284f406b9e481038c86ca81031031884284f406b9e481038c86ca810310",
                            "background_bleeds": true,
                            "orientation": "landscape",
                            "size": "a4",
                            "department_id": 123
                            "updated_at": "2016-08-29T07:03:25.000Z",
                            "created_at": "2016-08-29T06:14:18.000Z",
                            "rasterized_content_url": "https://api.accredible.com/v1/example",
                            "groups": [
                                {
                                    "id": 61267,
                                    "name": "group 2",
                                    "updated_at": "2016-08-30T10:26:25.000Z",
                                    "credentials_count": 0
                                }
                            ],
                            "meta_data": {
                                "example2": "value_other"
                            }
                        }
                    ]
        }

## Design [/v1/designs/{design_id}]

### View a Design [GET]
+ Parameters
    + design_id (number) - ID of the Design in the form of an integer for the particular Design requested.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

+ Response 200 (application/json)

        {
            "design": {
                "id": 12472,
                "name": "new design",
                "kind": "certificate",
                "encoded_content": "31884284f406b9e481038c86ca81031031884284f406b9e481038c86ca810310",
                "background_bleeds": true,
                "orientation": "landscape",
                "size": "a4",
                "department_id": 123
                "updated_at": "2016-08-29T07:03:25.000Z",
                "created_at": "2016-08-29T06:14:18.000Z",
                "rasterized_content_url": "https://api.accredible.com/v1/example",
                "groups": [
                    {
                        "id": 61267,
                        "name": "group 1",
                        "updated_at": "2016-08-30T10:26:25.000Z",
                        "credentials_count": 1
                    }
                ],
                "meta_data": {
                    "example": "value"
                }
            }
        }


### Update a Design [PUT]

+ Parameters
    + design_id (number) - ID of the Design in the form of an integer for the particular Design requested.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

    + Attributes
        + name (string,required) - Name of the Design (for your reference and never shown to the recipient).
        + kind (string,required) - Must be "certificate" or "badge" to specify the Design type.
        + encoded_content (string,required) - The encoded content of the design.
        + background_bleeds (boolean,optional) - Specifies if the design should allow print bleeding.
        + orientation (string,optional) - Must be "landscape" or "portrait" to specify a design's paper orientation.
        + size (string,optional) - Must be "us-letter" or "a4" to specify a design's paper size.
        + meta_data (object, optional) - You can use this parameter to attach key-value strings to the object. Meta data is useful for storing additional, structured information on an object.

    + Body

            {
               "design": {
                    "name": "updated new design"
                }
            }

+ Response 200 (application/json)

        {
            "design": {
                "id": 12472,
                "name": "updated new design",
                "kind": "certificate",
                "encoded_content": "31884284f406b9e481038c86ca81031031884284f406b9e481038c86ca810310",
                "background_bleeds": true,
                "orientation": "landscape",
                "size": "a4",
                "department_id": 123
                "updated_at": "2016-08-29T07:03:25.000Z",
                "created_at": "2016-08-29T06:14:18.000Z",
                "rasterized_content_url": "https://api.accredible.com/v1/example",
                "groups": [
                    {
                        "id": 61267,
                        "name": "group 1",
                        "updated_at": "2016-08-30T10:26:25.000Z",
                        "credentials_count": 1
                    }
                ],
                "meta_data": {
                    "example": "value"
                }
            }
        }

### Delete a Design [DELETE]

+ Parameters
    + design_id (number) - ID of the Design in the form of an integer for the particular Design requested.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

+ Response 200 (application/json)

        {
            "design": {
                "id": 12472,
                "name": "updated new design",
                "kind": "certificate",
                "encoded_content": "31884284f406b9e481038c86ca81031031884284f406b9e481038c86ca810310",
                "background_bleeds": true,
                "orientation": "landscape",
                "size": "a4",
                "department_id": 123
                "updated_at": "2016-08-29T07:03:25.000Z",
                "created_at": "2016-08-29T06:14:18.000Z",
                "rasterized_content_url": "https://api.accredible.com/v1/example",
                "groups": [
                    {
                        "id": 61267,
                        "name": "group 1",
                        "updated_at": "2016-08-30T10:26:25.000Z",
                        "credentials_count": 1
                    }
                ],
                "meta_data": {
                    "example": "value"
                }
            }
        }


## Design [/v1/designs/{design_id}/copy]

### Copy a Design [POST]
+ Parameters
    + design_id (number) - ID of the Design in the form of an integer for the particular Design requested.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

    + Attributes
        + department_id (number,optional) - Department that the Design belongs to. If not defined the Design will be assigned to the organizations default department.

    + Body

            {
               "design": {
                    "department_id": 12345
                }
            }

+ Response 200 (application/json)

        {
            "design": {
                "id": 12472,
                "name": "new design",
                "kind": "certificate",
                "encoded_content": "31884284f406b9e481038c86ca81031031884284f406b9e481038c86ca810310",
                "background_bleeds": true,
                "orientation": "landscape",
                "size": "a4",
                "department_id": 12345
                "updated_at": "2016-08-29T07:03:25.000Z",
                "created_at": "2016-08-29T06:14:18.000Z",
                "rasterized_content_url": "https://api.accredible.com/v1/example",
                "groups": [
                    {
                        "id": 61267,
                        "name": "group 1",
                        "updated_at": "2016-08-30T10:26:25.000Z",
                        "credentials_count": 1
                    }
                ],
                "meta_data": {
                    "example": "value"
                }
            }
        }

## Search Designs [/v1/designs/search]

### Search for Designs [POST]

+ Parameters
    + kind (string, optional) - Limit results to just "certificates" or "badges".
    + department_id (string, optional) - Limit results to a particular Department.
    + meta_data (object, optional) - String key/values you attached to the object.
    + page_size(number, optional) - The pagination response size, default of 50.
    + page(number,optional) - The pagination page.


+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API_KEY


    + Body

            {
              "kind": "certificate",
              "meta_data": { "example": "value" }
            }

+ Response 200 (application/json)
      {
        "designs": [
             {
                "id": 12472,
                "name": "new design",
                "kind": "certificate",
                "encoded_content": "31884284f406b9e481038c86ca81031031884284f406b9e481038c86ca810310",
                "background_bleeds": true,
                "orientation": "landscape",
                "size": "a4",
                "department_id": 12345
                "updated_at": "2016-08-29T07:03:25.000Z",
                "created_at": "2016-08-29T06:14:18.000Z",
                "rasterized_content_url": "https://api.accredible.com/v1/example",
                "meta_data": {
                    "example": "value"
                }
            }
        ]
    }

## Design [/v1/designs/{design_id}/preview]

### Preview a Design [POST]
+ Parameters
    + design_id (number) - ID of the Design in the form of an integer for the particular Design requested.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY


    + Body

            {
               "recipient.name": "example name",
               "group.course_name": "My Example Course",
               "custom.example": "Data for a custom attribute."
            }

    + Attributes
        + recipient.name (string, optional) - Add any parameter that you wish to preview data for in your design.
        + group.course_name (string, optional) - Add any parameter that you wish to preview data for in your design.
        + custom.example (string, optional) - Add any parameter that you wish to preview data for in your design.


+ Response 200 (application/json)

    + Body

            { "link": "https://example.api.accredible.com/design/image?env=red&design=f1a53a79-baeb-43fb-a19e-045af89eb206&data=e30:7a2f83ba4880d6d73f0a9d826ed82661108d8c8825984f3a77812704911e2142" }


## Badge Designer [/v1/designers/badge/initialize]
As an OEM provider or reseller of digital badges it's easy to embed our badge design tool within your own platform and give your users the ability to create and update badge designs.

A full guide on using the embedded badge designer can be found at: https://help.accredible.com/embed-badge-designer


### Initialize Embedded Badge Designer [POST]

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

    + Body

            {
               "design_id": 12345,
               "department_id": 123
            }

    + Attributes
        + design_id (number,optional) - ID of the Design in the form of an integer for a Design to be edited. Omitting the ID will result in a newly created design.
        + department_id (number,optional) - ID of the Department which the Design should belong to.


+ Response 200 (application/json)

    + Body

            {
                "token": "abc123:xyz456",
                "design_id": 12345
            }


## Certificate Designer [/v1/designers/certificate/initialize]
As an OEM provider or reseller of digital certificates it's easy to embed our certificate design tool within your own platform and give your users the ability to create and update certificate designs.

A full guide on using the embedded certificate designer can be found at: https://help.accredible.com/embed-certificate-designer


### Initialize Embedded Certificate Designer [POST]

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

    + Body

            {
               "design_id": 12345,
               "department_id": 123
            }

    + Attributes
        + design_id (number,optional) - ID of the Design in the form of an integer for a Design to be edited. Omitting the ID will result in a newly created design.
        + department_id (number,optional) - ID of the Department which the Design should belong to.


+ Response 200 (application/json)

    + Body

            {
                "token": "abc123:xyz456",
                "design_id": 12345
            }

# Group Departments
Resources related to Departments. If enabled for your account, Departments allow you to manage multiple independent organization groups. Each Department is entirely separate with it's own Designs, Groups, Branding, etc. You cannot share data between Departments excepting Billing and Administrators.

## Departments [/v1/departments]

### Create a New Department [POST]
You may create a Department using this action. It takes a JSON object containing a Department.

+ Request (application/json)
    + Headers
            Authorization: Token token=YOUR API _KEY
    + Attributes
        + name (string, required) - A name for the Department. This may be displayed publicly on Credentials.
        + description (string, optional) - A description for the Department. This may be displayed publicly.
        + url (string, required) - URL for directing users to the website for the given Department. This may be used publicly.
        + logo (string, required) - URL of an image representing the Department logo. Accredible will copy the given image and store the logo within it's own platform. Images should be square, at least 120px wide by 120px tall. PNG format preferred.
        + page_banner (string, optional) - URL of an image to display as the Department Banner. Accredible will copy the given image and store the logo within it's own platform. The image should be at least 1920px wide by 300px tall. PNG format preferred.
        + linkedin_company_id (string, optional) - The LinkedIn company ID for the given Department.
        + meta_data (object, optional) - You can use this parameter to attach key-value strings to the object. Meta data is useful for storing additional, structured information on an object.
        + generate_private_credential (boolean, optional) - This boolean value will be used as the default of `Credential.private` when creating a new Credential unless it's overridden by `Group.generate_private_credential` that is set to `true` or `false`.

    + Body
            {
                "department": {
                    "name": "New Department",
                    "description": "Example description text.",
                    "url": "https://www.example.com",
                    "logo": "https://www.website.com/example-logo.png",
                    "page_banner": "https://www.website.com/example-banner.png",
                    "linkedin_company_id": "5098253",
                    "meta_data": {
                        "internal_id": "R12",
                        "faculty": "physics"
                    },
                    "generate_private_credential": false
                }
            }
+ Response 200 (application/json)
        {
            "department": {
                "id": 1234,
                "name": "New Department",
                "description": "Example description text.",
                "url": "https://www.example.com",
                "logo": "https://images.credential.net/example/department_logo.png",
                "page_banner": "https://images.credential.net/example/banner_image.png",
                "linkedin_company_id": "5098253",
                "meta_data": {
                    "internal_id": "R12",
                    "faculty": "physics"
                },
                "generate_private_credential": false
            }
        }

## Department [/v1/departments/{department_id}]

### View a Department [GET]

+ Request (application/json)
    + Headers
            Authorization: Token token=YOUR API _KEY
    + Parameters
        + department_id (string) - ID of the Department in the form of an integer for the particular Department requested.

+ Response 200 (application/json)
        {
            "department": {
                "id": 1234,
                "name": "New Department",
                "description": "Example description text.",
                "url": "https://www.example.com",
                "logo": "https://images.credential.net/example/department_logo.png",
                "page_banner": "https://images.credential.net/example/banner_image.png",
                "linkedin_company_id": "5098253",
                "meta_data": {
                    "internal_id": "R12",
                    "faculty": "physics"
                },
                "generate_private_credential": false
            }
        }

### Update a Department [PUT]

+ Parameters
    + department_id (string) - ID of the Department in the form of an integer for the particular Department requested.
+ Request (application/json)
    + Headers
            Authorization: Token token=YOUR API _KEY
    + Attributes
        + name (string, optional) - A name for the Department. This may be displayed publicly on Credentials.
        + description (string, optional) - A description for the Department. This may be displayed publicly.
        + url (string, optional) - URL for directing users to the website for the given Department. This may be used publicly.
        + logo (string, optional) - URL of an image representing the Department logo. Accredible will copy the given image and store the logo within it's own platform. Images should be square, at least 120px wide by 120px tall. PNG format preferred.
        + page_banner (string, optional) - URL of an image to display as the Department Banner. Accredible will copy the given image and store the logo within it's own platform. The image should be at least 1920px wide by 300px tall. PNG format preferred.
        + linkedin_company_id (string, optional) - The LinkedIn company ID for the given Department.
        + meta_data (object, optional) - You can use this parameter to attach key-value strings to the object. Meta data is useful for storing additional, structured information on an object.
        + generate_private_credential (boolean, optional) - This boolean value will be used as the default of `Credential.private` when creating a new Credential unless it's overridden by `Group.generate_private_credential` that is set to `true` or `false`.

    + Body
            {
                "department": {
                    "name": "New Department Name"
                }
            }

+ Response 200 (application/json)
        {
            "department": {
                "id": 1234,
                "name": "New Department Name",
                "description": "Example description text.",
                "url": "https://www.example.com",
                "logo": "https://images.credential.net/example/department_logo.png",
                "page_banner": "https://images.credential.net/example/banner_image.png",
                "linkedin_company_id": "5098253",
                "meta_data": {
                    "internal_id": "R12",
                    "faculty": "physics"
                },
                 "generate_private_credential": false
            }
        }

### Delete a Department [DELETE]
+ Parameters
    + department_id (string) - ID of the Department in the form of an integer for the particular Department requested.
+ Request (application/json)
    + Headers
            Authorization: Token token=YOUR API _KEY
+ Response 200 (application/json)
        {
            "department": {
                "id": 1234,
                "name": "New Department Name",
                "description": "Example description text.",
                "url": "https://www.example.com",
                "logo": "https://images.credential.net/example/department_logo.png",
                "page_banner": "https://images.credential.net/example/banner_image.png",
                "linkedin_company_id": "5098253",
                "meta_data": {
                    "internal_id": "R12",
                    "faculty": "physics"
                },
                 "generate_private_credential": false
            }
        }


## Search Departments [/v1/departments/search]

### Search for Departments [POST]

You can search for departments by various search criteria.

+ Parameters
    + meta_data (object, optional) - String key/values you attached to the object.
    + page_size(number, optional) - The pagination response size, default of 50.
    + page(number,optional) - The pagination page.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

    + Body

            {
                "meta_data": {
                        "faculty": "physics"
                }
            }

+ Response 200 (application/json)

        {
            "departments": {
                "id": 1234,
                "name": "New Department Name",
                "description": "Example description text.",
                "url": "https://www.example.com",
                "logo": "https://images.credential.net/example/department_logo.png",
                "page_banner": "https://images.credential.net/example/banner_image.png",
                "linkedin_company_id": "5098253",
                "meta_data": {
                    "internal_id": "R12",
                    "faculty": "physics"
                },
                 "generate_private_credential": false
            }
        }

# Group Attributes
Attributes provide a way to add information to certificates/emails. A full guide on Attributes can be found here: https://help.accredible.com/a-quick-guide-to-attributes

## Attribute Keys [/v1/attribute_keys]

### Create a New Custom Attribute Key [POST]
You may create a Custom Attribute Key using this action. It takes a JSON object containing the name and kind of the attribute key.

+ Request (application/json)
    + Headers
            Authorization: Token token=YOUR API _KEY
    + Attributes
        + name (string, required) - A name for the custom attribute key.
        + kind (string, required) - The kind of custom attribute key. Must be one of the following - [text, date, email, image]
        + department_id (number, required) - Department the custom attribute key should belong to.

    + Body
            {
                "attribute_key": {
                    "name": "New Custom Attribute Key",
                    "kind": "text",
                    "department_id": 123
                }
            }
+ Response 200 (application/json)
        {
            "attribute_key": {
                "id": 1234,
                "name": "New Custom Attribute Key",
                "kind": "text",
                "department_id": 123
            }
        }

## Search Attribute Keys  [/v1/attribute_keys/search]

### Search for Attribute Keys [POST]

You can search for Attribute Keys by various search criteria.

+ Parameters
    + name (string, optional) - A name for the custom attribute key.
    + kind (string, optional) - The kind of custom attribute key. Must be one of the following - [text, date, email, image]
    + page_size(number, optional) - The pagination response size, default of 50.
    + page(number,optional) - The pagination page.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

    + Body

            {
                "name": "attribute",
                "kind": "text"
            }

+ Response 200 (application/json)

        {
            "attribute_keys": [
                {
                    "id": 1234,
                    "name": "New Custom Attribute Key",
                    "kind": "text",
                    "department_id": 123
                }
            ],
            "meta": {
                "current_page": 1,
                "next_page": null,
                "prev_page": null,
                "total_pages": 1,
                "total_count": 1
            }
        }


# Group Evidence Items
Resources related to EvidenceItems. EvidenceItems provide more information about how the recipient met the achievement. Typically this would include work samples for a course.

## Evidence Items [/v1/credentials/{credential_id}/evidence_items]

### Create a New Evidence Item [POST]

You create EvidenceItems using this action. It takes a JSON object containing an Evidence Item.

+ Parameters
    + credential_id (string) - Global ID of the credential in the form of an integer or string for the particular Credential requested.


+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

    + Attributes
        + description (string, required) - Title text for the evidence item. This is displayed on a Credential.
        + category (string, required) - Type of Evidence Item added, must be one of [file, url, video, grade, transcript]. The type dictates how the item is displayed on the certificate.
        + url (string, optional) - If the category is url or video, this should be the URL of Evidence Item.
        + file (string, optional) - If the category is file, this should be the file's URL.
        + string_object (string, optional) - If the category is grade or transcipt then use it. For grade it will be just string 83.
        + preview (string, optional) - By default if you add a URL category EvidenceItem, we take a screenshot to set the preview of this URL on Credential. You can overwrite this default behaviour by setting this preview field to be the URL of the desired image.
        + position (number, optional) - The numeric position of the evidence item on the credential. 0 is displayed first in the list.
        + custom_insight (string, optional) - The insights which will appear below Evidence Item, if not given it will be generated automatically based on data.


    + Body

            {
                "evidence_item": {
                "description": "Example file",
                "file": "https://s3.amazonaws.com/accredible_api_evidence_items/files/44/original/1410743692307_Hours_Tracking.pdf",
                "category": "file"
                }
            }

+ Response 200 (application/json)

         {
            "evidence_item": {
            "id": 1234,
            "description": "updated description",
            "link_url": "https://s3.amazonaws.com/accredible_api_evidence_items/files/44/original/1410743692307_Hours_Tracking.pdf",
            "preview_image_url": "https://www.example.com/1234/reportcard.png",
            "type": "url",
            "supplemental": false,
            "string_object": null,
            "position": 1
            }
        }

## Evidence Item [/v1/credentials/{credential_id}/evidence_items/{evidence_item_id}]

### View a Evidence Item [GET]

+ Parameters
    + credential_id (string) - ID of the Credential in the form of an integer or string for the particular Credential requested.
    + evidence_item_id (number) - ID of the EvidenceItem in the form of an integer.

+ Response 200 (application/json)

        {
            "evidence_item": {
            "id": 1234,
            "description": "updated description",
            "link_url": "https://s3.amazonaws.com/accredible_api_evidence_items/files/44/original/1410743692307_Hours_Tracking.pdf",
            "preview_image_url": "https://www.example.com/1234/reportcard.png",
            "type": "url",
            "supplemental": false,
            "string_object": null,
            "position": 1
            }
        }


### Update a Evidence Item [PUT]

+ Parameters
    + credential_id (string) - ID of the Credential in the form of a string or integer for the particular Credential requested.
    + evidence_item_id (number) - ID of the Evidence Item in the form of an integer.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

    + Attributes
        + description (string, required) - Title text for the evidence item. This is displayed on a Credential.
        + category (string, required) - Type of Evidence Item added, must be one of [file, url, video, grade, transcript]. The type dictates how the item is displayed on the Credential.
        + url (string, optional) - If the category is url or video, this should be the URL of Evidence Item.
        + file (string, optional) - If the category is file, this should be the file's URL.
        + string_object (string, optional) - If the category is grade or transcipt then use it. For grade it will be just string 83.
        + preview (string, optional) - By default if you add a URL category EvidenceItem, we take a screenshot to set the preview of this URL on Credentials. You can overwrite this default behaviour by setting this preview field to be the URL of the desired image.
        + position (number, optional) - The numeric position of the evidence item on the credential. 0 is displayed first in the list.
        + custom_insight (string, optional) - The insights which will appear below Evidence Item, if not given it will be generated automatically based on data.


    + Body

            {
                "evidence_item": {
                    "description": "updated description"
                }
            }

+ Response 200 (application/json)

        {
            "evidence_item": {
            "id": 1234,
            "description": "updated description",
            "link_url": "https://s3.amazonaws.com/accredible_api_evidence_items/files/44/original/1410743692307_Hours_Tracking.pdf",
            "preview_image_url": "https://www.example.com/1234/reportcard.png",
            "type": "url",
            "supplemental": false,
            "string_object": null,
            "position": 1
            }
        }



### Delete a Evidence Item [DELETE]

+ Parameters
    + credential_id (string) - ID of the Credential in the form of a string or integer for the particular Credential requested.
    + evidence_item_id (number) - ID of the EvidenceItem in the form of an integer.


+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

+ Response 200 (application/json)

        {
            "evidence_item": {
                "id": 1234,
                "description": "Report card including all grades"
            }
        }


# Group References
Resources related to References. References provide more information about how the recipient met an achievement. Typically this would be a peer, teacher or manager giving their feedback.

## References [/v1/credentials/{credential_id}/references]

### Create a New Reference [POST]

You may create a Reference using this action. It takes a JSON object containing a Reference.

+ Parameters
    + credential_id (string) - ID of the Credential in the form of a string integer for the particular Credential requested.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

    + Attributes
        + description (string, required) - The reference comments / text.
        + relationship (string, required) - Must be one of: “taught”, “managed”, “mentored”, “worked”, “studied”, “friends”, “stranger”, “professor”.
        + referee.name (string, optional) - Name of the person providing the reference.
        + referee.email (string, optional) - Email of the person providing the reference.
        + referee.avatar (string, optional) - URL of image of the person providing the reference.
        + referee.url (string, optional) - URL of a social profile such as LinkedIn that would allow a viewer to learn more about the referee.
        + position (number, optional) - The numeric position of the evidence item on the credential. 0 is displayed first in the list.


    + Body

            {
                "reference": {
                    "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                    "referee": {
                        "name": "Jane Doe",
                        "email": "person@example.com",
                        "avatar": "https://placehold.it/100x100"
                        },
                    "relationship": "managed"
                }
            }

+ Response 200 (application/json)

        {
            "reference": {
                "id": 1234,
                "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                "referee": {
                    "name": "Jane Doe",
                    "email": "jdoe@example.com",
                    "avatar": "https://www.example.com/avatars/janedoe.png"
                },
                "supplemental": false,
                "relationship": "managed"
            }
        }


## Reference [/v1/credentials/{credential_id}/references/{reference_id}]


### View a Reference [GET]

+ Parameters
    + credential_id (string) - ID of the Credential in the form of a string or integer for the particular Credential requested.
    + reference_id (number) - ID of the Reference in the form of an integer.

+ Response 200 (application/json)

        {
            "reference": {
                "id": 1234,
                "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                "referee": {
                    "name": "Jane Doe",
                    "email": "jdoe@example.com",
                    "avatar": "https://www.example.com/avatars/janedoe.png"
                },
                "supplemental": false,
                "relationship": "managed"
            }
        }

### Update a Reference [PUT]

+ Parameters
    + credential_id (string) - ID of the Credential in the form of a string or integer for the particular Credential requested.
    + reference_id (number) - ID of the Reference in the form of an integer.


+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY


    + Attributes
        + description (string, required) - The reference comments / text.
        + relationship (string, required) - Must be one of: “taught”, “managed”, “mentored”, “worked”, “studied”, “friends”, “stranger”, “professor”.
        + position (number, optional) - The numeric position of the evidence item on the credential. 0 is displayed first in the list.

    + Body

            {
                "reference": {
                    "description": "my new reference text"
                }
            }

+ Response 200 (application/json)

        {
            "reference": {
                "id": 1234,
                "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                "referee": {
                    "name": "Jane Doe",
                    "email": "jdoe@example.com",
                    "avatar": "https://www.example.com/avatars/janedoe.png"
                },
                "supplemental": false,
                "relationship": "managed"
            }
        }



### DELETE a Reference [DELETE]

+ Parameters
    + credential_id (string) - ID of the Credential in the form of a string or integer for the particular Credential requested.
    + reference_id (number) - ID of the Reference in the form of an integer.


+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY


+ Response 200 (application/json)

        {
            "reference": {
                "id": 1234,
                "description": "John worked hard on this course and provided exemplary understanding of the core concepts",
                "referee": {
                    "name": "Jane Doe",
                    "email": "jdoe@example.com",
                    "avatar": "https://www.example.com/avatars/janedoe.png"
                },
                "supplemental": false,
                "relationship": "managed"
            }
        }

# Group Analytics

Events relating to Credential activity such as views, shares and other engagements. A full list of events can be found here: https://help.accredible.com/credential-analytic-events. By default, the API returns the events for all Departments within your Organization.

## Credential Analytics [/v1/analytics]
Your Accredible account is represented as an Issuer within the API.

### Index Analytics [GET]

+ Parameters
    + start_date (date, optional) - Only return Credential analytic events recoreded after the given start date. Format: YYYY/MM/DD.
    + end_date (date, optional) - Only return Credential analytic events recoreded before the given end date. Format: YYYY/MM/DD.
    + group_id (integer, optional) - Only return Credential analytic events relating to Credentials within the given Group.
    + department_id (integer, optional) - Only return Credential analytic events relating to Credentials within the given Department.
    + page_size(number, optional) - The pagination response size, default of 100.
    + page(number,optional) - The pagination page.


+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

+ Response 200 (application/json)
        {
           "analytics": [
                {
                    "credential": { id: 10533900, license_id: "xyz123" },
                    "event": "privacy_updated",
                    "created_at": "2018-02-13T07:00:00.000Z"
                },
                {
                    "credential": { id: 10533900, license_id: "yourProvidedID" },
                    "event": "recipient_view_certificate",
                    "created_at": "2018-02-13T07:00:00.000Z"
                },
                {
                    "credential": { id: 10533900, license_id: "exampleXYZ" },
                    "event": "credential_user_verified",
                    "created_at": "2018-02-13T07:00:00.000Z"
                }
            ],
            "meta": {
                "current_page": 1,
                "next_page": 2,
                "prev_page": null,
                "total_pages": 795,
                "total_count": 1590
            }
        }

# Group Team Members

## Team Members [/v1/team_members]
Accredible Dashboard users who create, edit or manage Credentials as part of your Organization.

### Create a Team Member [POST]

Create a TeamMember using this action. It requires a JSON object containing an TeamMember.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR_API_KEY

    + Attributes
        + name (string, required) - The name of the TeamMember user.
        + email (string, required) - The email address of the TeamMember user.
        + department_permissions (array, fixed-type, required)
            + (object)
                + department_id (number, required) - Department that the TeamMember should have the given permissions for.
                + permissions (object, required)
                    + designs (boolean, required) - Should the TeamMember have access to Designs for the given Department?
                    + emails (boolean, required) - Should the TeamMember have access to Email Settings and Email Templates for the given Department?
                    + credential_attributes (boolean, required) - Should the TeamMember have access to Attributes for the given Department?
                    + analytics (boolean, required) - Should the TeamMember have access to Analytics for the given Department?
                    + settings (boolean, required) - Should the TeamMember have access to Settings for the given Department?
                    + role (string, required) - "editor" or "viewer" access to Credential data in the Department.
                    + groups (array, optional) - Limit the TeamMember access to specific Groups in the Department.
    + Body

            {
                "team_member": {
                    "name": "John Doe",
                    "email": "person@example.com",
                    "department_permissions": [
                        {
                            "department_id": 34,
                            "permissions": {
                                "designs": true,
                                "emails": true,
                                "credential_attributes": true,
                                "analytics": true,
                                "settings": true,
                                "role": "editor",
                                "groups": [1, 2, 3]
                            }

                        },
                        {
                            "department_id": 35,
                            "permissions": {
                                "designs": false,
                                "emails": false,
                                "credential_attributes": false,
                                "analytics": false,
                                "settings": false,
                                "role": "viewer",
                                "groups": null
                            }

                        }
                    ]
                }
            }

+ Response 200 (application/json)

        {
            "team_member": {
                "id": 12345,
                "name": "John Doe",
                "email": "person@example.com",
                "department_permissions": [
                    {
                        "department_id": 34,
                        "permissions": {
                            "designs": true,
                            "emails": true,
                            "credential_attributes": true,
                            "analytics": true,
                            "settings": true,
                            "role": "editor",
                            "groups": [1, 2, 3]
                        }

                    },
                    {
                        "department_id": 35,
                        "permissions": {
                            "designs": false,
                            "emails": false,
                            "credential_attributes": false,
                            "analytics": false,
                            "settings": false,
                            "role": "viewer",
                            "groups": null
                        }

                    }
                ]
            }
        }

## Team Member [/v1/team_members/{id}]

### View a Team Member [GET]

+ Request (application/json)
    + Headers
        Authorization: Token token=YOUR_API_KEY

    + Parameters
        + id (string) - ID of the TeamMember in the form of an integer.

+ Response 200 (application/json)

        {
            "team_member": {
                "id": 12345,
                "name": "John Doe",
                "email": "person@example.com",
                "department_permissions": [
                    {
                        "department_id": 34,
                        "permissions": {
                            "designs": true,
                            "emails": true,
                            "credential_attributes": true,
                            "analytics": true,
                            "settings": true,
                            "role": "editor",
                            "groups": [1, 2, 3]
                        }

                    },
                    {
                        "department_id": 35,
                        "permissions": {
                            "designs": false,
                            "emails": false,
                            "credential_attributes": false,
                            "analytics": false,
                            "settings": false,
                            "role": "viewer",
                            "groups": null
                        }

                    }
                ]
            }
        }


### Update a Team Member [PUT]

Update a TeamMember using this action. It requires a JSON object containing an TeamMember.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR_API_KEY

    + Attributes
        + id (number, required) - The ID of the TeamMember to update.
        + name (string, optional) - The name of the TeamMember user.
        + email (string, optional) - The email address of the TeamMember user.
        + department_permissions (array, fixed-type, optional) - This parameter will override any existing permissions, not append to them.
            + (object)
                + department_id (number, required) - Department that the TeamMember should have the given permissions for.
                + permissions (object, required)
                    + designs (boolean, required) - Should the TeamMember have access to Designs for the given Department?
                    + emails (boolean, required) - Should the TeamMember have access to Email Settings and Email Templates for the given Department?
                    + credential_attributes (boolean, required) - Should the TeamMember have access to Attributes for the given Department?
                    + analytics (boolean, required) - Should the TeamMember have access to Analytics for the given Department?
                    + settings (boolean, required) - Should the TeamMember have access to Settings for the given Department?
                    + role (string, required) - "editor" or "viewer" access to Credential data in the Department.
                    + groups (array, optional) - Limit the TeamMember access to specific Groups in the Department.
    + Body

            {
                "team_member": {
                    "department_permissions": [
                        {
                            "department_id": 34,
                            "permissions": {
                                "designs": false,
                                "emails": false,
                                "credential_attributes": true,
                                "analytics": true,
                                "settings": true,
                                "role": "editor",
                                "groups": [1, 2, 3]
                            }

                        },
                        {
                            "department_id": 35,
                            "permissions": {
                                "designs": false,
                                "emails": false,
                                "credential_attributes": false,
                                "analytics": false,
                                "settings": false,
                                "role": "viewer",
                                "groups": null
                            }

                        }
                    ]
                }
            }

+ Response 200 (application/json)

        {
            "team_member": {
                "id": 12345
                "name": "John Doe",
                "email": "person@example.com",
                "department_permissions": [
                    {
                        "department_id": 34,
                        "permissions": {
                            "designs": false,
                            "emails": false,
                            "credential_attributes": true,
                            "analytics": true,
                            "settings": true,
                            "role": "editor",
                            "groups": [1, 2, 3]
                        }

                    },
                    {
                        "department_id": 35,
                        "permissions": {
                            "designs": false,
                            "emails": false,
                            "credential_attributes": false,
                            "analytics": false,
                            "settings": false,
                            "role": "viewer",
                            "groups": null
                        }

                    }
                ]
            }
        }

### Delete a Team Member [DELETE]

+ Parameters
    + id (string) - ID of the TeamMember in the form of an integer.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY


+ Response 200 (application/json)

        {
            "team_member": {
                "id": 12345
                "name": "John Doe",
                "email": "person@example.com",
                "department_permissions": [
                    {
                        "department_id": 34,
                        "permissions": {
                            "designs": false,
                            "emails": false,
                            "credential_attributes": true,
                            "analytics": true,
                            "settings": true,
                            "role": "editor",
                            "groups": [1, 2, 3]
                        }

                    },
                    {
                        "department_id": 35,
                        "permissions": {
                            "designs": false,
                            "emails": false,
                            "credential_attributes": false,
                            "analytics": false,
                            "settings": false,
                            "role": "viewer",
                            "groups": null
                        }

                    }
                ]
            }
        }

# Group Issuers

## Issuers [/v1/issuer/details]
Your Accredible account is represented as an Issuer within the API.

### View an Issuer [GET]

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

+ Response 200 (application/json)

        {
            "issuer": {
                        "id": 1,
                        "name": "Example Provider",
                        "email": "dev@accredible.com",
                        "certificate_left": 100,
                        "language": "en",
                        "url": "http://www.accredible.com",
                        "spiderable": true,
                        "whitelisted_domain": "http://www.accredible.com/",
                        "linkedin_company_id": null,
                        "linkedin_school_id": null
                    }
        }

# Group SSO

Accredible offers single sign-on solutions for recipients and issuers. Email support@accredible.com for a full list of options and to receive development assistance. SSO is also available via our Integrations and via SAML 2.0.

## Recipient SSO Link [/v1/sso/generate_link]
The easiest way to provide single sign-on for your recipients is to generate a link at render time. We recommend:<br>
a) Add a button on your platform for recipients to go to their credential(s).<br>
b) When the user clicks the button, make request to the below endpoint to generate a link.<br>
c) Redirect the user to the link provided in the response.<br>


### Generating Link [POST]
This endpoint generates a single sign on link that authorizes the recipient on their credential.

The code expires after used once.

+ Request (application/json)

    + Headers

            Authorization: Token token=YOUR API _KEY

    + Attributes
        + credential_id (string, optional) - The unique ID of the credential. If you supply your own internal ID as a license_id, you should use that.
        + recipient_id (string, optional) - The recipient's user ID as defined by your organization. If more than one credential exists for your organization for this student, we give the link to their last (most recent) credential.
        + recipient_email (string, optional) - The recipient's email address. If more than one credential exists in your organization for this student, we give a link to their last (most recent) credential.
        + wallet_view (boolean, optional) - If multiple credentials belonging to the recipient requested for this organization and the wallet view flag is set true, we provide a link to the recipients credential wallet.
        + group_id (string, optional) - The group that a credential belongs to. If more than one credential exists for your group for this student, we give the link to their last (most recent) credential.
        + redirect_to (string, optional) - If the code is wrong, we will redirect student back to this link by default we use your registered url.


+ Response 200 (application/json)

        {
            "link": "http://www.credential.net/10000005/sso?code=1330"
        }
